version: "3"
services:
  radarr:                                                                                               # Radarr, For Movies
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    mem_limit: 512m
    mem_reservation: 64m
    cpus: 0.5
    volumes:
      - /docker/arrstack/radarr/config:/config                                                                 # Config File location
      - /mnt/nas/radarr:/movies                                                                         # Movies Download location
      - /mnt/nas/qbit/downloads:/downloads                                                              # Downloads Location of QBit client
    networks:
      - arrstack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.entrypoints=http"
      - "traefik.http.routers.radarr.rule=Host(`radarr.$DOMAIN_NAME.com`)"                              # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.radarr.middlewares=https-redirect"
      - "traefik.http.routers.radarr-secure.entrypoints=https"
      - "traefik.http.routers.radarr-secure.rule=Host(`radarr.$DOMAIN_NAME.com`)"                       # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.radarr-secure.tls=true"
      - "traefik.http.routers.radarr-secure.service=radarr"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
      - "traefik.docker.network=arrstack"
    restart: unless-stopped

  prowlarr:                                                                                             # Prowlarr, For Indexers list for files
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    volumes:
      - /docker/arrstack/prowlarr/config:/config                                                        # Config File location
    restart: unless-stopped
    networks:
      - arrstack
    labels:
    #Prowlarr Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.entrypoints=http"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.$DOMAIN_NAME.com`)"
      - "traefik.http.routers.prowlarr.middlewares=https-redirect"
      - "traefik.http.routers.prowlarr-secure.entrypoints=https"
      - "traefik.http.routers.prowlarr-secure.rule=Host(`prowlarr.$DOMAIN_NAME.com`)"
      - "traefik.http.routers.prowlarr-secure.tls=true"
      - "traefik.http.routers.prowlarr-secure.service=prowlarr"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
      - "traefik.docker.network=arrstack"


  sonarr:                                                                                               # Sonarr, For TV Shows
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    volumes:
      - /docker/arrstack/sonarr/config:/config                                                          # Config File location
      - /mnt/nas/sonarr:/tv                                                                             # TV Shows Download location
      - /mnt/nas/qbit/downloads:/downloads                                                              # Downloads Location of QBit client
    networks:
      - arrstack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.entrypoints=http"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.$DOMAIN_NAME.com`)"                              # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sonarr.middlewares=https-redirect"
      - "traefik.http.routers.sonarr-secure.entrypoints=https"
      - "traefik.http.routers.sonarr-secure.rule=Host(`sonarr.$DOMAIN_NAME.com`)"                       # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.sonarr-secure.tls=true"
      - "traefik.http.routers.sonarr-secure.service=sonarr"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
      - "traefik.docker.network=arrstack"
    restart: unless-stopped


  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:piavpn"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8090
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    volumes:
      - /docker/arrstack/qbit/config:/config                                                            # Config File location
      - /mnt/nas/qbit/downloads:/downloads                                                              # Downloads Location
    restart: unless-stopped
    healthcheck:
        test: ping -c 1 www.google.com || exit 1
        interval: 25s
        timeout: 10s
        retries: 3
    labels:
      - "autoheal=true"


  jellyseerr:                                                                                           # Jellyseerr, To mark content for downloading
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
            - LOG_LEVEL=debug
            - TZ=Etc/UTC
    volumes:
      - /docker/arrstack/jellyseerr/appdata/config:/app/config                                                      # Config File location
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.7
    networks:
      - arrstack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.entrypoints=http"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.$DOMAIN_NAME.com`)"                      # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyseerr.middlewares=https-redirect"
      - "traefik.http.routers.jellyseerr-secure.entrypoints=https"
      - "traefik.http.routers.jellyseerr-secure.rule=Host(`jellyseerr.$DOMAIN_NAME.com`)"               # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.jellyseerr-secure.tls=true"
      - "traefik.http.routers.jellyseerr-secure.service=jellyseerr"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"
      - "traefik.docker.network=arrstack"

  jellyfin:                                                                                             # Jellyfin, Client for watching content
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - JELLYFIN_PublishedServerUrl=jellyfin.$DOMAIN_NAME.com                                           # Replace $DOMAIN_NAME with yours
    volumes:
      - /docker/arrstack/jellyfin/library:/config                                                       # Config File location
      - /mnt/nas/sonarr:/data/tvshows                                                                   # Match with Sonarr's file location
      - /mnt/nas/radarr:/data/movies                                                                    # Match with Radarr's file location
    ports:
      - 7359:7359/udp                                                                                   # Discovery Jellyfin on LAN
      - 1900:1900/udp                                                                                   # Discovery Jellyfin on LAN
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    networks:
      - arrstack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.entrypoints=http"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.$DOMAIN_NAME.com`)"                           # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.jellyfin.middlewares=https-redirect"
      - "traefik.http.routers.jellyfin-secure.entrypoints=https"
      - "traefik.http.routers.jellyfin-secure.rule=Host(`jellyfin.$DOMAIN_NAME.com`)"                    # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.jellyfin-secure.tls=true"
      - "traefik.http.routers.jellyfin-secure.service=jellyfin"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
      - "traefik.docker.network=arrstack"

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /docker/arrstack/bazarr/config:/config                                                          # Config File location
      - /mnt/nas/sonarr:/tv                                                                             # Match with Sonarr's file location
      - /mnt/nas/radarr:/movies                                                                         # Match with Radarr's file location
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    networks:
      - arrstack
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.entrypoints=http"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.$DOMAIN_NAME.com`)"                              # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.bazarr.middlewares=https-redirect"
      - "traefik.http.routers.bazarr-secure.entrypoints=https"
      - "traefik.http.routers.bazarr-secure.rule=Host(`bazarr.$DOMAIN_NAME.com`)"                       # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.bazarr-secure.tls=true"
      - "traefik.http.routers.bazarr-secure.service=bazarr"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"
      - "traefik.docker.network=arrstack"

  piavpn:
    image: thrnz/docker-wireguard-pia
    container_name: piavpn
    mem_limit: 512m
    mem_reservation: 32m
    cpus: 0.5
    volumes:
     - pia:/pia
     - /root/.script.sh:/scripts/script.sh                                                              # run sudo chmod 700 /root/.script.sh for port forwarding
    cap_add:
     - NET_ADMIN
     - SYS_MODULE
    environment:
     - LOC=swiss
     - USER="$USR1"                                                                                     # VPN username
     - PASS="$PW1"                                                                                      # VPN Password
     - KEEPALIVE=25
     - PORT_FORWARDING=1                                                                                # Port Forwarding enable
     - PORT_PERSIST=1                                                                                   # To keep using the same port (upto 2 months)
     - PORT_SCRIPT=/scripts/script.sh
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    networks:
      - arrstack
    labels:
      #Qbittorrent Traefik
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.entrypoints=http"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbit.$DOMAIN_NAME.com`)"                           # Replace $DOMAIN_NAME with yours
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.qbittorrent.middlewares=https-redirect"
      - "traefik.http.routers.qbittorrent-secure.entrypoints=https"
      - "traefik.http.routers.qbittorrent-secure.rule=Host(`qbit.$DOMAIN_NAME.com`)"                    # Replace $DOMAIN_NAME with yours
      - "traefik.http.routers.qbittorrent-secure.tls=true"
      - "traefik.http.routers.qbittorrent-secure.service=qbittorrent"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8090"
      - "traefik.http.services.qbittorrent.loadbalancer.passhostheader=false"
      - "traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.X-Frame-Options=SAMEORIGIN"
      - "traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.Referer="
      - "traefik.http.middlewares.qbittorrent-headers.headers.customrequestheaders.Origin="
      - "traefik.docker.network=arrstack"
      - "autoheal=true"                                                                                 # Autoheal label
    healthcheck:
        test: ping -c 1 www.google.com || exit 1
        interval: 25s
        timeout: 10s
        retries: 3
    
  autoheal:
    environment:
      AUTOHEAL_CONTAINER_LABEL: autoheal
      AUTOHEAL_INTERVAL: 7
    image: willfarrell/autoheal:latest
    network_mode: none
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock                                                       # Keep Docker socket to restart unhealthy containers

volumes:
    pia:
networks:
  arrstack:
    external: true
    name: arrstack
